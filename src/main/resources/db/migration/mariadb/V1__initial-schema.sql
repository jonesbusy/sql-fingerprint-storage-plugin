CREATE TABLE FINGERPRINT 
  (FINGERPRINT_ID              VARCHAR(256)   NOT NULL,
   INSTANCE_ID                 CHAR(32)       NOT NULL,
   TIMESTAMP                   TIMESTAMP(3)   NOT NULL,
   FILENAME                    VARCHAR(256)   NOT NULL,
   ORIGINAL_JOB_NAME           VARCHAR(256),
   ORIGINAL_JOB_BUILD_NUMBER   INT,
   PRIMARY KEY(FINGERPRINT_ID, INSTANCE_ID));

CREATE TABLE FINGERPRINT_JOB_BUILD_RELATION
  (FINGERPRINT_ID        VARCHAR(256)    NOT NULL,
   INSTANCE_ID           CHAR(32)        NOT NULL,
   JOB                   VARCHAR(256)    NOT NULL,
   BUILD_NUMBER          INT             NOT NULL,
   PRIMARY KEY(FINGERPRINT_ID, INSTANCE_ID, JOB, BUILD_NUMBER),
   FOREIGN KEY(FINGERPRINT_ID, INSTANCE_ID) REFERENCES FINGERPRINT(FINGERPRINT_ID, INSTANCE_ID) ON DELETE CASCADE);

CREATE INDEX FINGERPRINT_JOB_BUILD_RELATION_INDEX
  ON FINGERPRINT_JOB_BUILD_RELATION (FINGERPRINT_ID, INSTANCE_ID);

CREATE TABLE FINGERPRINT_FACET_RELATION
  (
   FINGERPRINT_ID     VARCHAR(256)    NOT NULL,
   INSTANCE_ID        CHAR(32)        NOT NULL,
   FACET_NAME         VARCHAR(256)    NOT NULL,
   FACET_ENTRY        JSON            NOT NULL,
   FACET_ENTRY_HASH   CHAR(64),
   DELETION_BLOCKED   BOOLEAN         NOT NULL,
   PRIMARY KEY(FINGERPRINT_ID, INSTANCE_ID, FACET_NAME, FACET_ENTRY_HASH),
   FOREIGN KEY(FINGERPRINT_ID, INSTANCE_ID) REFERENCES FINGERPRINT(FINGERPRINT_ID, INSTANCE_ID) ON DELETE CASCADE
  );

CREATE TRIGGER before_insert_fingerprint_facet_relation
BEFORE INSERT ON FINGERPRINT_FACET_RELATION
FOR EACH ROW
SET NEW.FACET_ENTRY_HASH = SHA2(NEW.FACET_ENTRY, 256);

CREATE TRIGGER before_update_fingerprint_facet_relation
BEFORE UPDATE ON FINGERPRINT_FACET_RELATION
FOR EACH ROW
SET NEW.FACET_ENTRY_HASH = SHA2(NEW.FACET_ENTRY, 256);

CREATE INDEX FINGERPRINT_FACET_RELATION_INDEX
  ON FINGERPRINT_FACET_RELATION (FINGERPRINT_ID, INSTANCE_ID);
